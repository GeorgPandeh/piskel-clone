{"version":3,"sources":["Components/Frame/Frame.js","Components/Preview/Preview.js","Components/Frame/FramesList.js","Components/Canvas/Canvas.js","App.js","Components/Landing/Landing.js","serviceWorker.js","index.js"],"names":["Frame","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","generateRect","item","i","arrayOfColors","props","getRects","children","react_default","a","createElement","ReactKonva","x","size","y","width","height","fill","attrs","key","field","map","Component","Preview","fullscreen","preview","document","getElementsByClassName","style","margin","fullscreenElement","exitFullscreen","requestFullscreen","addEventListener","window","screen","count","state","history","length","timeout","setTimeout","forceUpdate","fps","className","Components_Frame_Frame","canvasFrame","animation","isAnimationOn","clearTimeout","setState","changeFps","e","target","value","onClick","onInput","type","step","id","min","max","concat","FramesList","raiseFrame","_ref","dropFrame","_ref2","dublicate","splice","delete","getFrames","_ref3","Canvas","stroke","strokeWidth","changeColor","isBucketOn","innerHTML","color","canvasMouseEvent","evt","buttons","targetColor","layer","current","forEach","draw","removeDiv","body","removeChild","fieldBuffer","index","div","appendChild","createTextNode","createFrame","canvas","JSON","parse","stringify","console","log","toConsumableArray","bucket","clear","eraser","React","createRef","push","onMouseDown","onMouseOver","ref","Frame_FramesList","Components_Preview_Preview","App","data","Components_Canvas_Canvas","Landing","react_router_dom","to","href","Boolean","location","hostname","match","ReactDOM","render","basename","process","react_router","exact","path","component","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7d4ddce0.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Stage, Layer, Rect } from 'react-konva';\r\n\r\nclass Frame extends Component {\r\n  constructor() {\r\n    super();\r\n    this.size = 4;\r\n  }\r\n\r\n  generateRect = (item, i) => {\r\n    const arrayOfColors = this.props.getRects.children;\r\n    if (arrayOfColors) {\r\n      return (\r\n        <Rect\r\n          x={item.x * this.size}\r\n          y={item.y * this.size}\r\n          width={this.size}\r\n          height={this.size}\r\n          fill={arrayOfColors[i].attrs.fill}\r\n          key={i}\r\n        />\r\n      )\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { field } = this.props;\r\n    if (this.props.size) {\r\n      this.size = this.props.size;\r\n    }\r\n\r\n    const { x } = this.props;\r\n    const size = this.size * 32;\r\n    return (\r\n      <div>\r\n        <Stage width={size + x} height={size} x={x}>\r\n          <Layer>\r\n            {field.map(this.generateRect)}\r\n          </Layer>\r\n        </Stage>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Frame;","import React, { Component } from 'react';\r\n\r\nimport Frame from '../Frame/Frame';\r\nimport './preview.css';\r\n\r\nclass Preview extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [],\r\n      count: 0,\r\n    };\r\n    this.size = 4;\r\n    this.x = 0;\r\n    this.fps = 0;\r\n    this.count = 0;\r\n    this.isAnimationOn = false;\r\n    this.timeout = 0;\r\n  }\r\n\r\n  fullscreen = () => {\r\n    const preview = document.getElementsByClassName('preview')[0]\r\n    if (preview) {\r\n      preview.style.margin = '0 auto';\r\n      if (!preview.fullscreenElement) {\r\n        preview.requestFullscreen();\r\n      } else if (preview.exitFullscreen) {\r\n        preview.exitFullscreen();\r\n      }\r\n\r\n      preview.addEventListener('fullscreenchange', () => {\r\n        if (document.fullscreenElement) {\r\n          const width = window.screen.width;\r\n          const height = window.screen.height;\r\n          this.size = height / 32;\r\n          this.x = (width / 2 - this.size * 16);\r\n        } if (!document.fullscreenElement) {\r\n          this.x = 0;\r\n          this.size = 4;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  preview = () => {\r\n    const { field } = this.props;\r\n    if (this.count === this.state.history.length) {\r\n      this.count = 0;\r\n    }\r\n\r\n    const history = this.state.history[this.count];\r\n    if (history) {\r\n      this.timeout = setTimeout(() => {\r\n        this.count += 1;\r\n        this.forceUpdate();\r\n      }, 1000 / this.fps);\r\n      return (\r\n        <div className=\"preview\">\r\n          <Frame field={field} getRects={history.canvasFrame} size={this.size} x={this.x} />\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps() {\r\n    clearTimeout(this.timeout);\r\n  };\r\n\r\n  animation = () => {\r\n    if (!this.isAnimationOn) {\r\n      const history = this.props.history;\r\n      this.setState({ history: history });\r\n      this.isAnimationOn = true;\r\n    } else if (this.isAnimationOn) {\r\n      clearTimeout(this.timeout);\r\n      this.isAnimationOn = false;\r\n    }\r\n  }\r\n\r\n  changeFps = (e) => {\r\n    this.fps = e.target.value;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.preview()}\r\n        <button className='animation' onClick={this.animation}>Animation</button>\r\n        <button className='full-screen' onClick={this.fullscreen}>Fullscreen</button>\r\n        <input onInput={this.changeFps} className=\"fps\" type=\"range\" step=\"1\" id=\"start\" min=\"1\" max=\"24\" />\r\n        {`FPS = ${this.fps}`}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Preview;","import React, { Component } from 'react';\r\n\r\nimport Frame from './Frame';\r\nimport './framelist.css';\r\n\r\nclass FramesList extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      history: [],\r\n    }\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.history !== state.history) {\r\n      return {\r\n        history: props.history,\r\n      }\r\n    }\r\n\r\n    return null\r\n  }\r\n\r\n  raiseFrame = (id) => {\r\n    const { history } = this.state;\r\n    if (history[id - 1]) {\r\n      [history[id], history[id - 1]] = [history[id - 1], history[id]]\r\n      this.forceUpdate();\r\n    }\r\n  }\r\n\r\n  dropFrame = (id) => {\r\n    const { history } = this.state;\r\n    if (history[id + 1]) {\r\n      [history[id], history[id + 1]] = [history[id + 1], history[id]]\r\n      this.forceUpdate();\r\n    }\r\n  }\r\n\r\n  dublicate = (id) => {\r\n    const { history } = this.state;\r\n    history.splice(id, 0, history[id]);\r\n    this.forceUpdate();\r\n  }\r\n\r\n  delete = (id) => {\r\n    const { history } = this.state;\r\n    history.splice(id, 1);\r\n    this.forceUpdate();\r\n  }\r\n\r\n\r\n  getFrames = ({ canvasFrame }, id) => {\r\n    const { field } = this.props;\r\n    return (\r\n      <div key={id}>\r\n        <div className=\"frame_change-position_block\">\r\n          <div className=\"frame-element\">\r\n            <Frame field={field} getRects={canvasFrame} key={id} x={0} />\r\n          </div>\r\n          <div className=\"change-position-buttons\">\r\n            <button onClick={() => { this.raiseFrame(id) }}>∧</button>\r\n            <button onClick={() => { this.dropFrame(id) }}>∨</button>\r\n          </div>\r\n        </div>\r\n        <button className=\"delete\" onClick={() => { this.delete(id) }}>Delete frame</button>\r\n        <button className=\"dublicate\" onClick={() => { this.dublicate(id) }}>Dublicate frame</button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const { history } = this.state;\r\n    return (\r\n      <div>\r\n        {history.map(this.getFrames)}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default FramesList;","import React, { Component } from 'react';\r\nimport { Stage, Layer, Rect } from 'react-konva';\r\n\r\nimport Preview from '../Preview/Preview';\r\nimport FramesList from '../Frame/FramesList';\r\nimport './canvas.css';\r\n\r\nclass Canvas extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      canvasFrame: [],\r\n      history: [],\r\n    }\r\n    this.color = 'black';\r\n    this.layer = React.createRef();\r\n    this.isBucketOn = false;\r\n    this.fieldBuffer = [];\r\n  }\r\n\r\n  generateRect = (item, id) => {\r\n    return (\r\n      <Rect\r\n        x={item.x * 15}\r\n        y={item.y * 15}\r\n        stroke='black'\r\n        strokeWidth={0.3}\r\n        width={15}\r\n        height={15}\r\n        fill='#464646'\r\n        key={id}\r\n      />\r\n    )\r\n  }\r\n\r\n  changeColor = (e) => {\r\n    this.isBucketOn = false;\r\n    if (e.target.innerHTML === \"Primary color\") {\r\n      e.target.innerHTML = \"Secondary color\";\r\n      this.color = 'black';\r\n    } else {\r\n      e.target.innerHTML = \"Primary color\";\r\n      this.color = 'white';\r\n    }\r\n  }\r\n\r\n  canvasMouseEvent = (e) => {\r\n    if (e.evt.buttons === 1) {\r\n      if (this.isBucketOn) {\r\n        const targetColor = e.target.attrs.fill\r\n        this.layer.current.children.forEach(item => {\r\n          if (item.attrs.fill === targetColor) {\r\n            item.attrs.fill = this.color;\r\n          }\r\n        });\r\n\r\n        this.layer.current.draw();\r\n      } else {\r\n        e.target.attrs.fill = this.color;\r\n        e.target.draw();\r\n      }\r\n    }\r\n\r\n    const removeDiv = document.getElementsByClassName('coordinates')[0];\r\n    if (removeDiv) {\r\n      document.body.removeChild(removeDiv);\r\n    }\r\n\r\n    const x = this.fieldBuffer[e.target.index].x;\r\n    const y = this.fieldBuffer[e.target.index].y;\r\n    const div = document.createElement('div');\r\n    div.className = 'coordinates';\r\n    div.appendChild(document.createTextNode(`x: ${x}; y: ${y}`));\r\n    document.body.appendChild(div);\r\n  }\r\n\r\n  createFrame = () => {\r\n    this.setState(state => {\r\n      const canvas = JSON.parse(JSON.parse(JSON.stringify(this.layer.current)));\r\n      console.log(canvas);\r\n      return {\r\n        canvasFrame: canvas,\r\n        history: [...state.history, { canvasFrame: canvas }],\r\n      }\r\n    });\r\n  }\r\n\r\n  bucket = () => {\r\n    if (!this.isBucketOn) {\r\n      this.isBucketOn = true;\r\n    } else this.isBucketOn = false;\r\n  }\r\n\r\n  clear = () => {\r\n    this.isBucketOn = false;\r\n    this.layer.current.children.map(item => item.attrs.fill = '#464646');\r\n    this.layer.current.draw();\r\n  }\r\n\r\n  eraser = () => {\r\n    this.isBucketOn = false;\r\n    this.color = '#464646';\r\n  }\r\n\r\n  render() {\r\n    const field = [];\r\n    for (let y = 0; y <= 31; y++) {\r\n      for (let x = 0; x <= 31; x++) {\r\n        field.push({ x, y });\r\n        this.fieldBuffer.push({ x, y });\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Stage className=\"canvas\" width={480} height={480} onMouseDown={this.canvasMouseEvent} onMouseOver={this.canvasMouseEvent}>\r\n          <Layer ref={this.layer}>\r\n            {\r\n              field.map(this.generateRect)\r\n            }\r\n          </Layer>\r\n        </Stage>\r\n        <div className=\"new-frame_change-color_buttons\">\r\n          <button onClick={this.createFrame}>Create Frame</button>\r\n          <button onClick={this.changeColor}>Change Color</button>\r\n          <button onClick={this.bucket}>Bucket</button>\r\n          <button onClick={this.clear}>Clear</button>\r\n          <button onClick={this.eraser}>Eraser</button>\r\n        </div>\r\n        <FramesList field={field} history={this.state.history} />\r\n        <div className='preview-block'>\r\n          <Preview field={field} history={this.state.history} />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Canvas;","import React from 'react';\r\nimport Canvas from './Components/Canvas/Canvas';\r\n\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      data: [],\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Canvas />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './landing.css';\r\n\r\nclass Landing extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className='header'>piskel clone task</div>\r\n        <div className=\"start-button\">\r\n          <button>\r\n            <Link className=\"start-link\" to='/main'>Start</Link>\r\n          </button>\r\n        </div>\r\n        <ul className=\"contacts\">\r\n          <li>Gmail: <a href=\"mailto:georgpandeh@gmail.com\">georgpandeh@gmail.com</a></li>\r\n          <li>Life: <a href=\"tel:+375256297342\">+375256297342</a></li>\r\n          <li>Telegram: <a href=\"tg://resolve?domain=@GeorgPandeh\">@GeorgPandeh</a></li>\r\n          <li></li>\r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Landing;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport Landing from './Components/Landing/Landing';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Switch, Route } from 'react-router-dom'\r\n\r\nReactDOM.render((\r\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n    <Switch>\r\n      <Route exact path='/' component={Landing} />\r\n      <Route path='/main' component={App} />\r\n    </Switch>\r\n  </BrowserRouter>\r\n), document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}