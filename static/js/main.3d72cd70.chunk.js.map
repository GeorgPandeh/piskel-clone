{"version":3,"sources":["../../../epamTraining/GeorgPandeh-2019Q1/piskel-clone/src/Components/Frame/Frame.js","../../../epamTraining/GeorgPandeh-2019Q1/piskel-clone/src/Components/Preview/Preview.js","../../../epamTraining/GeorgPandeh-2019Q1/piskel-clone/src/Components/Frame/FramesList.js","../../../epamTraining/GeorgPandeh-2019Q1/piskel-clone/src/Components/Canvas/Canvas.js","../../../epamTraining/GeorgPandeh-2019Q1/piskel-clone/src/App.js","../../../epamTraining/GeorgPandeh-2019Q1/piskel-clone/src/Components/Landing/Landing.js","../../../epamTraining/GeorgPandeh-2019Q1/piskel-clone/src/serviceWorker.js","../../../epamTraining/GeorgPandeh-2019Q1/piskel-clone/src/index.js"],"names":["Frame","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","size","x","generateRect","bind","assertThisInitialized","array","props","react_default","a","createElement","ReactKonva","width","height","map","item","i","arrayOfColors","getRects","children","y","fill","attrs","key","push","createCanvasLayer","Component","Preview","state","history","count","fps","isAnimationOn","timeout","changeFps","fullscreen","animation","_this2","preview","document","getElementsByClassName","style","margin","fullscreenElement","exitFullscreen","requestFullscreen","addEventListener","window","screen","_this3","length","setTimeout","forceUpdate","className","Components_Frame_Frame","canvasFrame","clearTimeout","setState","e","target","value","onClick","onInput","type","step","id","min","max","concat","FramesList","raiseFrame","dropFrame","dublicate","delete","getFrames","_ref","_ref2","splice","_ref3","Canvas","color","layer","React","createRef","canvasMouseEvent","button","changeColor","bucket","clear","stroke","strokeWidth","innerHTML","evt","buttons","draw","canvas","JSON","parse","stringify","current","toConsumableArray","onMouseDown","onMouseOver","ref","Frame_FramesList","Components_Preview_Preview","App","data","Components_Canvas_Canvas","Landing","react_router_dom","to","href","Boolean","location","hostname","match","ReactDOM","render","react_router","exact","path","component","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3d72cd70.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Stage, Layer, Rect} from 'react-konva';\r\n\r\nclass Frame extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.size = 4;\r\n    this.x = 0;\r\n    this.generateRect = this.generateRect.bind(this);\r\n  }\r\n\r\n  createCanvasLayer(array) {\r\n    if (this.props.size) {\r\n      this.size = this.props.size;\r\n    }\r\n    \r\n    this.x = this.props.x;\r\n    const size = this.size *32;\r\n    return (\r\n      <Stage width={size + this.x} height={size} x={this.x}>\r\n        <Layer>\r\n          {array.map(this.generateRect)}\r\n        </Layer>\r\n      </Stage>\r\n    )\r\n  }\r\n\r\n  generateRect(item,i) {\r\n    const arrayOfColors = this.props.getRects.children;\r\n    if (arrayOfColors) {\r\n      return(\r\n        <Rect\r\n        x={item.x*this.size}\r\n        y={item.y*this.size}\r\n        width={this.size}\r\n        height={this.size}\r\n        fill={arrayOfColors[i].attrs.fill}\r\n        key={i}\r\n        />\r\n      )\r\n    }\r\n   }\r\n\r\n  render() {\r\n    let array = [];\r\n    for (let y = 0; y <= 32; y++) {\r\n      for (let x = 0; x <= 32; x++) {\r\n        array.push({x,y});\r\n      }\r\n    }\r\n    return(\r\n      <div>\r\n          {this.createCanvasLayer(array)}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Frame;","import React, { Component } from 'react';\r\nimport Frame from '../Frame/Frame';\r\n\r\nclass Preview extends Component {\r\n  constructor (props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [],\r\n      count: 0,\r\n    };\r\n    this.size = 4;\r\n    this.x = 0;\r\n    this.fps = 0;\r\n    this.count = 0;\r\n    this.isAnimationOn = false;\r\n    this.timeout = 0;\r\n    this.changeFps = this.changeFps.bind(this);\r\n    this.fullscreen = this.fullscreen.bind(this);\r\n    this.animation = this.animation.bind(this);\r\n  }\r\n\r\n  fullscreen() {\r\n    const preview = document.getElementsByClassName('preview')[0]\r\n    if (preview) {\r\n      preview.style.margin = '0 auto';\r\n      if (!preview.fullscreenElement) {\r\n        preview.requestFullscreen();\r\n      } else if (preview.exitFullscreen) {\r\n        preview.exitFullscreen();\r\n      }\r\n      \r\n      preview.addEventListener('fullscreenchange', () => {\r\n        if (document.fullscreenElement) {\r\n          const width = window.screen.width;\r\n          const height = window.screen.height;\r\n            this.size = height / 32;\r\n            this.x = (width / 2 - this.size*16);\r\n        } if (!document.fullscreenElement) {\r\n          this.x = 0;\r\n          this.size = 4;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  preview() {\r\n    if(this.count === this.state.history.length) {\r\n      this.count = 0;\r\n    }\r\n\r\n    const history = this.state.history[this.count];\r\n    if (history) {\r\n      this.timeout = setTimeout(() => {\r\n        this.count += 1;\r\n        this.forceUpdate();\r\n      }, 1000 / this.fps);\r\n      return (\r\n        <div className=\"preview\">\r\n          <Frame getRects={history.canvasFrame} size={this.size} x={this.x} />\r\n        </div>\r\n      )\r\n    } \r\n  }\r\n\r\n  componentWillReceiveProps() {\r\n    clearTimeout(this.timeout);\r\n   };\r\n\r\n  animation() {\r\n    if (!this.isAnimationOn) {\r\n      const history = this.props.history;\r\n      this.setState({history: history});\r\n      this.isAnimationOn = true;\r\n    } else if (this.isAnimationOn) {\r\n      clearTimeout(this.timeout);\r\n      this.isAnimationOn = false;\r\n    }\r\n  }\r\n\r\n  changeFps(e) {\r\n    this.fps = e.target.value;\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n         {this.preview()}\r\n          <button className='animation' onClick={this.animation}>Animation</button>\r\n          <button className='full-screen' onClick={this.fullscreen}>Fullscreen</button>\r\n          <input onInput={this.changeFps} className=\"fps\" type=\"range\" step=\"1\" id=\"start\" min=\"1\" max=\"15\"></input>\r\n          {`FPS = ${this.fps}`}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Preview;","import React, { Component } from 'react';\r\nimport Frame from './Frame';\r\n\r\nimport './framelist.css';\r\n\r\nclass FramesList extends Component {\r\n  constructor () {\r\n    super();\r\n    this.state = {\r\n      history: [],\r\n    }\r\n    this.raiseFrame = this.raiseFrame.bind(this);\r\n    this.dropFrame = this.dropFrame.bind(this);\r\n    this.dublicate = this.dublicate.bind(this);\r\n    this.delete = this.delete.bind(this);\r\n    this.getFrames = this.getFrames.bind(this);\r\n  }\r\n\r\n  static getDerivedStateFromProps (props, state) {\r\n      if (props.history !== state.history) {\r\n        return {\r\n          history: props.history,\r\n        }\r\n      }\r\n\r\n      return null\r\n    }\r\n\r\n  raiseFrame(id) {\r\n    const history = this.state.history;\r\n    if (history[id - 1]) {\r\n      [history[id], history[id - 1]] = [history[id - 1], history[id]]\r\n      this.forceUpdate();\r\n    }\r\n  }\r\n\r\n  dropFrame(id) {\r\n    const history = this.state.history;\r\n    if (history[id + 1]) {\r\n      [history[id], history[id + 1]] = [history[id + 1], history[id]]\r\n      this.forceUpdate();\r\n    }\r\n  }\r\n\r\n  dublicate(id) {\r\n    const history = this.state.history;\r\n    history.splice(id, 0, history[id]);\r\n    this.forceUpdate();\r\n  }\r\n\r\n  delete(id) {\r\n    const history = this.state.history;\r\n    history.splice(id, 1);\r\n    this.forceUpdate();\r\n  }\r\n\r\n  \r\n  getFrames({ canvasFrame }, id) {\r\n    return (\r\n      <div key={id}>\r\n        <div className=\"frame_change-position_block\">\r\n          <div className=\"frame-element\">\r\n            <Frame getRects={canvasFrame} key={id} x={0} />\r\n          </div>\r\n          <div className=\"change-position-buttons\">\r\n            <button onClick={() => {this.raiseFrame(id)}}>∧</button>\r\n            <button onClick={() => {this.dropFrame(id)}}>∨</button>\r\n          </div>\r\n        </div>\r\n        <button className=\"delete\" onClick={() => {this.delete(id)}}>Delete frame</button>\r\n        <button className=\"dublicate\" onClick={() => {this.dublicate(id)}}>Dublicate frame</button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render () {\r\n    const history = this.props.history;\r\n    return (\r\n      <div>\r\n        {history.map(this.getFrames)}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default FramesList;","import React, { Component } from 'react';\r\nimport './canvas.css';\r\nimport Preview from '../Preview/Preview';\r\nimport { Stage, Layer, Rect} from 'react-konva';\r\nimport FramesList from '../Frame/FramesList';\r\n\r\nclass Canvas extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      canvasFrame: [],\r\n      history: [],\r\n      color: 'black',\r\n    }\r\n    this.layer = React.createRef();\r\n    this.canvasMouseEvent = this.canvasMouseEvent.bind(this);\r\n    this.button = this.button.bind(this);\r\n    this.changeColor = this.changeColor.bind(this);\r\n    this.bucket = this.bucket.bind(this);\r\n    this.clear = this.clear.bind(this);\r\n  }\r\n\r\n  generateRect(item, id) {\r\n    return(\r\n      <Rect\r\n      x={item.x*15}\r\n      y={item.y*15}\r\n      stroke='black'\r\n      strokeWidth={0.3}\r\n      width={15}\r\n      height={15}\r\n      fill='#464646'\r\n      key={id}\r\n      />\r\n      )\r\n   }\r\n\r\n  changeColor(e) {\r\n    if (e.target.innerHTML === \"Primary color\") {\r\n      e.target.innerHTML = \"Secondary color\";\r\n      this.setState({color: 'black'});\r\n    } else {\r\n      e.target.innerHTML = \"Primary color\";\r\n      this.setState({color: 'white'});\r\n    }\r\n  }\r\n  \r\n  canvasMouseEvent (e) {\r\n    if (e.evt.buttons === 1 || e.evt.buttons === 2) {\r\n      if (e.evt.buttons === 1) {\r\n        e.target.attrs.fill = this.state.color;\r\n      } else if (e.evt.buttons === 2) {\r\n        e.target.attrs.fill = \"#464646\";\r\n      }\r\n      e.target.draw();\r\n    }\r\n  }\r\n\r\n  button() {\r\n    this.setState(state => {\r\n      const canvas = JSON.parse(JSON.parse(JSON.stringify(this.layer.current)));\r\n      return {\r\n        canvasFrame: canvas,\r\n        history: [...state.history, { canvasFrame: canvas }],\r\n      }\r\n    });\r\n  }\r\n\r\n  bucket() {\r\n    this.layer.current.children.map(item => item.attrs.fill = this.state.color);\r\n    this.layer.current.draw();\r\n  }\r\n\r\n  clear() {\r\n    this.layer.current.children.map(item =>  item.attrs.fill = '#464646');\r\n    this.layer.current.draw();\r\n  }\r\n  \r\n  render() {\r\n    let array = [];\r\n    for (let y = 0; y <= 32; y++) {\r\n      for (let x = 0; x <= 32; x++) {\r\n        array.push({x,y});\r\n      }\r\n    }\r\n\r\n    return(\r\n      <div>\r\n        <Stage className=\"canvas\" width={480} height={480} onMouseDown={this.canvasMouseEvent} onMouseOver={this.canvasMouseEvent}>\r\n          <Layer ref={this.layer}>\r\n            {\r\n              array.map(this.generateRect)\r\n            }\r\n          </Layer>\r\n        </Stage>\r\n        <div className=\"new-frame_change-color_buttons\">\r\n          <button className=\"new-frame-button\" onClick={this.button}>Create Frame</button>\r\n          <button className=\"change-color-button\" onClick={this.changeColor}>Change Color</button>\r\n          <button className=\"bucket-button\" onClick={this.bucket}>Bucket</button>\r\n          <button className=\"clear-button\" onClick={this.clear}>Clear</button>\r\n        </div>\r\n        <FramesList history={this.state.history} />\r\n        <div className='preview-block'>\r\n          <Preview history={this.state.history} />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Canvas;","import React from 'react';\r\nimport Canvas from './Components/Canvas/Canvas';\r\n\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      data: [],\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Canvas />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './landing.css';\r\n\r\nclass Landing extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className='header'>piskel clone task</div>\r\n        <div className=\"start-button\">\r\n          <button>\r\n            <Link className=\"start-link\" to='/main'>Start</Link>\r\n          </button>\r\n        </div>\r\n        <ul className=\"contacts\">\r\n          <li>Gmail: <a href=\"mailto:georgpandeh@gmail.com\">georgpandeh@gmail.com</a></li>\r\n          <li>Life: <a href=\"tel:+375256297342\">+375256297342</a></li>\r\n          <li>Telegram: <a href=\"tg://resolve?domain=@GeorgPandeh\">@GeorgPandeh</a></li>\r\n          <li></li>\r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Landing;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport Landing from './Components/Landing/Landing';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Switch, Route } from 'react-router-dom'\r\n\r\nReactDOM.render((\r\n  <BrowserRouter>\r\n    <Switch>\r\n      <Route exact path='/' component={Landing}/>\r\n      <Route path='/main' component={App}/>\r\n    </Switch>\r\n  </BrowserRouter>\r\n), document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}